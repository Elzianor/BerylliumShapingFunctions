namespace Beryllium.ShapingFunctions;

public enum ShapingFunctions
{
    BackEaseIn,
    BackEaseInOut,
    BackEaseOut,
    BezierCubic,
    BezierQuadratic,
    BounceEaseIn,
    BounceEaseInOut,
    BounceEaseOut,
    CircularDoubleSeat,
    CircularDoubleSigmoid,
    CircularEaseIn,
    CircularEaseInOut,
    CircularEaseOut,
    ElasticEaseIn,
    ElasticEaseInOut,
    ElasticEaseOut,
    EllipticalDoubleSeat,
    EllipticalDoubleSigmoid,
    ExponentialDoubleSeat,
    ExponentialDoubleSigmoid,
    ExponentialEaseIn,
    ExponentialEaseInOut,
    ExponentialEaseOut,
    ExponentialEasing,
    LogisticSigmoid,
    Linear,
    QuadraticEaseIn,
    QuadraticEaseInOut,
    QuadraticEaseOut,
    QuadraticThroughAGivenPoint,
    CubicDoubleSeat,
    CubicDoubleSeatWithLinearBlend,
    CubicEaseIn,
    CubicEaseInOut,
    CubicEaseOut,
    QuarticEaseIn,
    QuarticEaseInOut,
    QuarticEaseOut,
    QuinticEaseIn,
    QuinticEaseInOut,
    QuinticEaseOut,
    BlinnWyvillCosineApproximation,
    DoubleOddPolynomialSeat,
    DoublePolynomialSigmoid,
    SineEaseIn,
    SineEaseInOut,
    SineEaseOut
}

public static class ShapingFunctionsFactory
{
    public static BaseShapingFunction Create(ShapingFunctions type)
    {
        return type switch
        {
            ShapingFunctions.BackEaseIn => new BackEaseIn(),
            ShapingFunctions.BackEaseInOut => new BackEaseInOut(),
            ShapingFunctions.BackEaseOut => new BackEaseOut(),
            ShapingFunctions.BezierCubic => new BezierCubic(),
            ShapingFunctions.BezierQuadratic => new BezierQuadratic(),
            ShapingFunctions.BounceEaseIn => new BounceEaseIn(),
            ShapingFunctions.BounceEaseInOut => new BounceEaseInOut(),
            ShapingFunctions.BounceEaseOut => new BounceEaseOut(),
            ShapingFunctions.CircularDoubleSeat => new CircularDoubleSeat(),
            ShapingFunctions.CircularDoubleSigmoid => new CircularDoubleSigmoid(),
            ShapingFunctions.CircularEaseIn => new CircularEaseIn(),
            ShapingFunctions.CircularEaseInOut => new CircularEaseInOut(),
            ShapingFunctions.CircularEaseOut => new CircularEaseOut(),
            ShapingFunctions.ElasticEaseIn => new ElasticEaseIn(),
            ShapingFunctions.ElasticEaseInOut => new ElasticEaseInOut(),
            ShapingFunctions.ElasticEaseOut => new ElasticEaseOut(),
            ShapingFunctions.EllipticalDoubleSeat => new EllipticalDoubleSeat(),
            ShapingFunctions.EllipticalDoubleSigmoid => new EllipticalDoubleSigmoid(),
            ShapingFunctions.ExponentialDoubleSeat => new ExponentialDoubleSeat(),
            ShapingFunctions.ExponentialDoubleSigmoid => new ExponentialDoubleSigmoid(),
            ShapingFunctions.ExponentialEaseIn => new ExponentialEaseIn(),
            ShapingFunctions.ExponentialEaseInOut => new ExponentialEaseInOut(),
            ShapingFunctions.ExponentialEaseOut => new ExponentialEaseOut(),
            ShapingFunctions.ExponentialEasing => new ExponentialEasing(),
            ShapingFunctions.LogisticSigmoid => new LogisticSigmoid(),
            ShapingFunctions.Linear => new Linear(),
            ShapingFunctions.CubicDoubleSeat => new CubicDoubleSeat(),
            ShapingFunctions.CubicDoubleSeatWithLinearBlend => new CubicDoubleSeatWithLinearBlend(),
            ShapingFunctions.CubicEaseIn => new CubicEaseIn(),
            ShapingFunctions.CubicEaseInOut => new CubicEaseInOut(),
            ShapingFunctions.CubicEaseOut => new CubicEaseOut(),
            ShapingFunctions.BlinnWyvillCosineApproximation => new BlinnWyvillCosineApproximation(),
            ShapingFunctions.DoubleOddPolynomialSeat => new DoubleOddPolynomialSeat(),
            ShapingFunctions.DoublePolynomialSigmoid => new DoublePolynomialSigmoid(),
            ShapingFunctions.QuadraticEaseIn => new QuadraticEaseIn(),
            ShapingFunctions.QuadraticEaseInOut => new QuadraticEaseInOut(),
            ShapingFunctions.QuadraticEaseOut => new QuadraticEaseOut(),
            ShapingFunctions.QuadraticThroughAGivenPoint => new QuadraticThroughAGivenPoint(),
            ShapingFunctions.QuarticEaseIn => new QuarticEaseIn(),
            ShapingFunctions.QuarticEaseInOut => new QuarticEaseInOut(),
            ShapingFunctions.QuarticEaseOut => new QuarticEaseOut(),
            ShapingFunctions.QuinticEaseIn => new QuinticEaseIn(),
            ShapingFunctions.QuinticEaseInOut => new QuinticEaseInOut(),
            ShapingFunctions.QuinticEaseOut => new QuinticEaseOut(),
            ShapingFunctions.SineEaseIn => new SineEaseIn(),
            ShapingFunctions.SineEaseInOut => new SineEaseInOut(),
            ShapingFunctions.SineEaseOut => new SineEaseOut(),
            _ => null
        };
    }
}
